import telebot, re
from sqlalchemy import update, bindparam
import db

from telebot import types
from config import TOKEN, PRIVACY_POLICY_URL, LICENSE_AGREEMENT_URL

bot = telebot.TeleBot(TOKEN)
agreement = types.ReplyKeyboardMarkup(resize_keyboard=True, is_persistent=True,
                                      input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–∞–Ω–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ ->")
agreement.row(types.KeyboardButton("‚ùå –û—Ç–∫–∞–∑—ã–≤–∞—é—Å—å ‚ùå"), types.KeyboardButton("‚úÖ –ü—Ä–∏–Ω–∏–º–∞—é ‚úÖ"))

def ask_states(user_db_data, msg):
    if user_db_data.state == 1:
        if bool(re.fullmatch(r"[–ê-–Ø][–∞-—è]+ [–ê-–Ø][–∞-—è]+ [–ê-–Ø][–∞-—è]+", msg.text)):
            bot.send_message(msg.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
            db.session.query(db.User).filter(db.User.telegram_id == msg.from_user.id). \
                update({'state': 2})
            db.session.commit()
        else:
            bot.send_message(msg.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –§–ò–û.")
    elif user_db_data.state == 2:
        if bool(re.fullmatch(r"8\d{10}", msg.text)) or bool(re.fullmatch(r"\+7\d{10}", msg.text)):
            bot.send_message(msg.chat.id, "–ì–æ—Ç–æ–≤–æ. –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
            db.session.query(db.User).filter(db.User.telegram_id == msg.from_user.id).update({'state': 3})
            db.session.commit()
        else:
            bot.send_message(msg.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")

@bot.message_handler(commands=['start'])
def send_welcome(msg:types.Message):
    user_db_data = db.session.query(db.User).filter(db.User.telegram_id==msg.from_user.id).first()
    if user_db_data is not None:
        ask_states(user_db_data, msg)
    else:
        bot.send_message(msg.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –¥–∞–ª–µ–µ, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ <a href=\"%s\"> —É—Å–ª–æ–≤–∏—è "
                                      "–ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è</a> –∏ <a href=\"%s\"> –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>."
                                                                        % (LICENSE_AGREEMENT_URL, PRIVACY_POLICY_URL),
                                        parse_mode="HTML", reply_markup=agreement,
                                        link_preview_options=types.LinkPreviewOptions(is_disabled=True))

@bot.message_handler()
def message_get(msg:types.Message):
    user_db_data = db.session.query(db.User).filter(db.User.telegram_id==msg.from_user.id).first()
    if user_db_data is None:
        if msg.text == "‚ùå –û—Ç–∫–∞–∑—ã–≤–∞—é—Å—å ‚ùå":
            bot.send_message(msg.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –ø—Ä–∏–Ω—è–≤ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ "
                                          "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ üò¢", reply_markup=types.ReplyKeyboardRemove())
        elif msg.text == "‚úÖ –ü—Ä–∏–Ω–∏–º–∞—é ‚úÖ":
            db.session.add(db.User(telegram_id=msg.from_user.id, telegram_username=msg.from_user.username, type='O', state=1))
            db.session.commit()
            bot.send_message(msg.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –§–ò–û", reply_markup=types.ReplyKeyboardRemove())
    else:
        ask_states(user_db_data,msg)

bot.infinity_polling()